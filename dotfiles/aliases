#!/usr/bin/env sh

# DEFAULTS
alias as="echo Remapped to do nothing."
alias cp='cp -ir'
alias df="df -h"
alias du="du -h"
alias grep="grep --color"
alias ls="ls --color --group-directories-first -Ah"
alias lsblk="lsblk -o name,label,mountpoint,fstype,size"
alias mkdir="mkdir -p"
alias mount="sudo mount"
alias mv="mv -i"
alias pacman="sudo pacman"
alias rm="rm -fr"
alias shfmt="shfmt -ci -sr -p -s -i4"
alias sudo="sudo "
alias tmux="tmux -f ~/.config/tmux.conf"
alias top="top -1 -u \$USER"
alias umount="sudo umount"

# MISC
alias am="alsamixer"
alias cl="sudo pacman -Rns \$(pacman -Qttdq); sudo pacman -Sc"
alias e="exit"
alias j="fg"
alias lb="lsblk"
alias ll="ls -l"
alias m="mv"
alias ma="make; make clean"
alias mai="sudo make install clean"
alias md="mkdir -p"
alias p="cp"
alias pa="patch -p1 <"
alias pw="pwd | sed 's/\/home\/aleks/~/' | sed 's/\/[^/]*$//'"
alias py="python"
alias re="sudo \$(fc -ln -1)"
alias to="touch"
alias u="sudo sh -c \"curl -s 'https://www.archlinux.org/mirrorlist/?country=DE&protocol=https&use_mirror_status=on' | sed -e s/^#Server/Server/ -e /^#/d > /etc/pacman.d/mirrorlist\" && yay"
alias up="sudo sh -c \"curl -s 'https://www.archlinux.org/mirrorlist/?country=DE&protocol=https&use_mirror_status=on' | sed -e s/^#Server/Server/ -e /^#/d > /etc/pacman.d/mirrorlist\" && pacman -Syu"
alias y="youtube-dl"

# CONDA
alias cel="conda env list"
alias cer="conda env remove -n"
alias coa="conda deactivate; conda activate"
alias cod="conda deactivate"
alias coi="conda install"
alias cou="conda update --all --prune"

# TMUX
t() { s=0; if [ $# -gt 0 ]; then s="$1"; fi; tmux new -As "$s"; }
alias ta="tmux a -t"
alias tk="tmux kill-session -t"
alias tl="tmux ls"

# X
alias xa="x -a"
alias xc="x -c"
alias xm="x -m"
alias xp="x -p"

# SYSTEM
alias ii="networkctl"
alias s="cat /sys/class/power_supply/BAT0/capacity"
alias sd="systemctl suspend"
alias sl="slock"
alias sp="poweroff"
alias sr="reboot"

# FUNCTIONS
c() { cd "$(find . -type d ! -path '*/\.git/*' ! -path '*/tex/*' ! -iname '.git' ! -iname '.' | sed 's/^.\///' | fzf)" || echo Can not open directory.; }
cd() { if [ $# -eq 0 ]; then builtin cd && ls || return; else builtin cd "$@" && ls; fi; }
d() { if [ $# -eq 0 ]; then clear; else rm "$@"; ls; fi; }
di() { $BROWSER https://www.dict.cc/?s="$1"; }
flash() { sudo dd bs=4M if="$1" of="$2" status=progress oflag=sync; }
mc() { mkdir "$1" && cd "$1" || return; }

# Similar to xdg-open but does what I actually want and is faster.
f() {
    [ $# -eq 0 ] && fzf | xargs -r "$EDITOR" && return
    [ -d "$1" ] && cd "$@" && return
    [ ! -f "$1" ] && $EDITOR "$@" && return
    mimetype=$(file -bL --mime-type "$1")
    mime=$(echo "$mimetype" | cut -d/ -f1)
    case $mime in
        "text") $EDITOR "$@" && return ;;
        "image") $BROWSER "$@" && return ;;
        "video") $BROWSER "$@" && return ;;
        "audio") $BROWSER "$@" && return ;;
    esac
    case $mimetype in
        "application/json") $EDITOR "$@" ;;
        "inode/x-empty") $EDITOR "$@" ;;
        "application/pdf") $BROWSER "$@" ;;
        "application/gzip") tar -xzf "$@" ;;
        *) echo No association with mimetype: "$mimetype" >&2 ;;
    esac
}

l() {
    if [ $# -eq 0 ]; then ls
    elif [ -f "$1" ]; then cat "$1"
    elif [ -d "$1" ]; then ls "$1";
    else echo Argument is not a file or directory.; fi
}

# DOTFILES
alias a="\$EDITOR ~/.config/aliases && . ~/.config/aliases"
alias co="cd ~/.config"
alias fb="\$EDITOR ~/.bashrc && . ~/.bashrc"
alias fm="\$EDITOR ~/.config/nvim/init.vim"
alias fx="\$EDITOR ~/.config/sx/sxrc"

# DROPBOX
alias fdd="cd ~/Dropbox"
alias fu="cd ~/Dropbox/uni"
alias myc="cd ~/Dropbox/uni/myo/myo"
alias myr="cd ~/Dropbox/uni/myo/report && \$EDITOR main.tex"
alias n="\$EDITOR ~/Dropbox/misc/notes"
alias nn="cd ~/Dropbox/misc"
alias vm="cd ~/Dropbox/uni/vml"
alias vme="conda activate ml; cd ~/Dropbox/uni/vml/exercises"
alias vml="cd ~/Dropbox/uni/vml/lectures"
alias wa="~/Dropbox/pictures/wallpapers"

# HOME
alias -- ,="cd .."
alias ca="cd ~/.cache"
alias h="cd && clear"
alias lo="cd ~/.local/share"
alias o="cd ~/Downloads"
alias tm="\$EDITOR /tmp/scratch"
alias v="cd -"

# PROJECTS
alias fa="cd ~/projects/arch"
alias fad="cd ~/projects/arch && \$EDITOR desktop.sh"
alias fcd="\$EDITOR config.def.h"
alias fd="cd ~/projects/dotfiles"
alias fdm="cd ~/projects/dmenu"
alias fj="cd ~/projects"
alias fsc="cd ~/projects/scripts"
alias fst="cd ~/projects/st"

# GIT
k() { n=16; [ "$#" != 0 ] && n=$1; git log --all --graph --decorate --oneline -n"$n"; }
kgg() { git log --color --oneline --grep "$1" | fzf --ansi --no-sort | cut -d\  -f1 | xsel -b; }
krb() { n=8; [ "$#" != 0 ] && n=$1; git rebase -i HEAD~"$n"; }
krh() { n=0; [ "$#" != 0 ] && n=$1; git reset --hard HEAD~"$n"; }

alias ka="git add"
alias kaa="git add --all"
alias kam="git commit --amend"
alias kb="git branch"
alias kbd="git branch -D"
alias kbr="git remote -v | grep -P \(push\) | cut -d ' ' -f 1 | cut -f 2 | xargs -r \$BROWSER"
alias kcl="git clone"
alias kd="git diff"
alias kfp="git format-patch --stdout HEAD^ >"
alias kr="cd \$(git rev-parse --show-toplevel)"
alias ks="git status -bs"

alias kc="git commit"
alias kca="git add --all && git commit"
alias kcp="git add --all && git commit && git push"
alias kcr="git commit -am tmp && git rebase -i HEAD~2"

alias kg="git log --all --graph --decorate --oneline"
alias kl="git log --date=auto:human"
alias klg="git log --grep"
alias kso="git show"

alias ko="git checkout"
alias kob="git checkout -b"
alias kma="git checkout master"

alias kf="git fetch"
alias km="git merge"
alias kmm="git merge master"
alias kpl="git pull"
alias kps="git push"
alias kpsf="git push -f"

alias kcn="git clean -f"
alias krm="git rebase master"
alias krr="git reset --hard; git clean -f"
alias krs="git reset --soft"
alias krv="git revert"

alias ksd="git stash drop"
alias ksl="git stash list"
alias ksp="git stash pop"
alias kst="git stash"
