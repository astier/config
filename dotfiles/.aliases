#!/usr/bin/env sh

# DEFAULTS
alias as="echo Remapped to do nothing."
alias cp='cp -ir'
alias df="df -h"
alias du="du -h"
alias grep="grep --color"
alias ls="ls --color --group-directories-first -Ah"
alias lsblk="lsblk -o name,label,mountpoint,fstype,size"
alias mkdir="mkdir -p"
alias mount="sudo mount"
alias mv="mv -i"
alias pacman="sudo pacman"
alias rm="rm -fr"
alias shfmt="shfmt -ci -sr -p -s"
alias sudo="sudo "
alias top="top -1 -u \$USER"
alias umount="sudo umount"

# FUNCTIONS
cd() { if [ $# -eq 0 ]; then builtin cd || return; else builtin cd "$@" && ls; fi; }
d() { if [ $# -eq 0 ]; then clear; else rm "$@"; fi; }
di() { $BROWSER https://www.dict.cc/?s="$1"; }
flash() { sudo dd bs=4M if="$1" of="$2" status=progress oflag=sync; }

# SHORTCUTS
alias c="cat"
alias cl="sudo pacman -Rns \$(pacman -Qttdq); sudo pacman -Sc"
alias da="cd; clear"
alias dl="clear; ls"
alias e="exit"
alias f="fg"
alias l="ls"
alias lb="lsblk"
alias ll="ls -l"
alias m="mv"
alias ma="make; make clean"
alias mai="sudo make install clean"
alias md="mkdir -p"
alias p="cp"
alias pa="patch -p1 <"
alias pm="pulsemixer"
alias py="python"
alias re="sudo \$(fc -ln -1)"
alias to="touch"
alias u="sudo sh -c \"curl -s 'https://www.archlinux.org/mirrorlist/?country=DE&protocol=https&use_mirror_status=on' | sed -e s/^#Server/Server/ -e /^#/d > /etc/pacman.d/mirrorlist\" && yay"

# CONDA
alias coa="conda activate"
alias cod="conda deactivate"
alias cou="conda update --all --prune"
alias coi="conda install"

# TMUX
alias t="tmux a -t 0 || tmux new -c ~ -s 0"
alias ta="tmux a -t"
alias tl="tmux ls"
alias tn="tmux new -s"
alias tk="tmux kill -t"

# X
alias x="x -c; x"
alias xm="x -m"
alias xp="x -p"
alias xx="x"

# SYSTEM
alias ii="networkctl"
alias s="cat /sys/class/power_supply/BAT0/capacity"
alias sd="systemctl suspend"
alias sl="slock"
alias sp="poweroff"
alias sr="reboot"

# APERIRE. Similar to xdg-open but does what I actually want and is faster.
a() {
    [ $# -eq 0 ] && fzf | xargs -r "$EDITOR" && return
    [ -d "$1" ] && cd "$@" && return
    [ ! -f "$1" ] && [ ! -d "$1" ] && echo "Can't find: $*" && return
    mimetype=$(file -bL --mime-type "$1")
    mime=$(echo "$mimetype" | cut -d/ -f1)
    case $mime in
        "text") $EDITOR "$@" && return ;;
        "image") $BROWSER "$@" && return ;;
        "video") $BROWSER "$@" && return ;;
        "audio") $BROWSER "$@" && return ;;
    esac
    case $mimetype in
        "application/json") $EDITOR "$@" ;;
        "inode/x-empty") $EDITOR "$@" ;;
        "application/pdf") $BROWSER "$@" ;;
        "application/gzip") tar -xzf "$@" ;;
        *) echo No association with mimetype: "$mimetype" >&2 ;;
    esac
}

# BOOKMARKS (ar and as are already existing commands)
alias -- ,="cd -"
alias ...="cd ../.."
alias ac="cd ~/.config"
alias aca="cd ~/.cache"
alias af="\$EDITOR"
alias ah="cd ~"
alias alo="cd ~/.local/share"
alias ao="cd ~/Downloads"
alias att="\$EDITOR /tmp/scratch"

alias add="cd ~/Dropbox"
alias au="cd ~/Dropbox/uni"
alias aw="~/Dropbox/pictures/wallpapers"
alias k="(libreoffice ~/Dropbox/misc/tracker.ods &)"
alias myo="conda activate myo; cd ~/Dropbox/uni/s3/myo"
alias n="\$EDITOR ~/Dropbox/misc/notes"
alias rdm="cd ~/Dropbox/uni/s3/rdm"

alias aa="cd ~/projects/arch && \$EDITOR desktop.sh base.sh"
alias aaa="cd ~/projects/arch"
alias ad="cd ~/projects/dotfiles/dotfiles"
alias ai="cd ~/projects/sites"
alias al="\$EDITOR ~/.aliases && . ~/.aliases"
alias ap="cd ~/projects"
alias asc="cd ~/projects/scripts/scripts"
alias ast="cd ~/projects/st"
alias av="\$EDITOR ~/.config/nvim/init.vim"
alias ax="\$EDITOR ~/.config/sx/sxrc"

# GIT
alias ga="git add"
alias gaa="git add --all"
alias gam="git commit --amend"
alias gb="git branch"
alias gbd="git branch -D"
alias gbr="git remote -v | grep -P \(push\) | cut -d ' ' -f 1 | cut -f 2 | xargs -r \$BROWSER"
alias gcl="git clone"
alias gfp="git format-patch --stdout HEAD^ >"
alias gs="git status -bs"
alias gd="git diff"

alias gc="git commit"
alias gca="git add --all && git commit"
alias gcp="git add --all && git commit && git push"
alias gcr="git commit -am tmp && git rebase -i HEAD~2"

g() {
    n=16
    [ "$#" != 0 ] && n=$1
    git log --all --graph --decorate --oneline -n"$n"
}

alias gg="git log --all --graph --decorate --oneline"
alias ggg="git log --oneline --grep"
alias gl="git log --date=auto:human"
alias glg="git log --grep"
alias gso="git show"

alias go="git checkout"
alias gob="git checkout -b"
alias gom="git checkout master"

alias gf="git fetch"
alias gm="git merge"
alias gmm="git merge master"
alias gpl="git pull"
alias gps="git push"
alias gpsf="git push -f"

grh() {
    n=0
    [ "$#" != 0 ] && n=$1
    git reset --hard HEAD~"$n"
}

alias gcn="git clean -f"
alias grb="git rebase -i"
alias grm="git rebase master"
alias grr="git reset --hard; git clean -f"
alias grs="git reset --soft"
alias grv="git revert"

alias gst="git stash"
alias gsp="git stash pop"
alias gsd="git stash drop"
