# PREFIX
unbind C-b
bind M-f send-prefix
set -g prefix M-f

# BINDINGS
bind M-/ copy-mode \; send-key ?
bind R source-file ~/.config/tmux.conf
bind -n M-q kill-pane
bind M-q kill-session

# INCREMENTAL SEARCH
unbind -T copy-mode-vi /
unbind -T copy-mode-vi ?
bind -T copy-mode-vi / command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental \"%%%\""

# MOUSE
bind -n DoubleClick1Status new-window -c "#{pane_current_path}"
bind -n MouseDown3Pane run "tmux set-buffer \"$(xsel)\"; tmux paste-buffer"
bind -n MouseDown3Status kill-window
bind -n MouseDrag1Status swap-window -t=
set -g mouse on

# MOUSE-SCROLLING in less, man etc.
bind -T root WheelUpPane \
    if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Up" "copy-mode -et="'
bind -T root WheelDownPane \
    if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Down" "send -Mt="'

# NAVIGATION (https://github.com/christoomey/vim-tmux-navigator)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind -T copy-mode-vi M-h select-pane -L
bind -T copy-mode-vi M-j select-pane -D
bind -T copy-mode-vi M-k select-pane -U
bind -T copy-mode-vi M-l select-pane -R

# PANES
bind -n M-s split-window -v -c "#{pane_current_path}"
bind M-h split-window -h -c "#{pane_current_path}"
bind -r H resize-pane -L 3
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3
bind -r L resize-pane -R 3

# SETTINGS
set -g aggressive-resize on
set -g default-shell /bin/bash
set -g default-terminal "tmux-256color"
set -g display-time 0
set -g focus-events on
set -g renumber-windows on
set -ga terminal-overrides ',*:Tc'

# THEME
set -g clock-mode-colour cyan
set -g mode-style bg=black
set -g display-panes-active-colour brightblack
set -g display-panes-colour black
set -g message-command-style bg=brightblack
set -g message-style bg=brightblack
set -g pane-active-border-style fg='#000000'
set -g pane-border-style fg='#000000'
set -g status-left ""
set -g status-right ""
set -g status-style default
set -g window-status-current-format "#[fg=#2e3440,bg=brightblack]#[bg=brightblack,fg=default] #W #F #[bg=default,fg=brightblack]"
set -g window-status-format "#[fg=#2e3440,bg=black]#[bg=black,fg=default] #W #F #[bg=default,fg=black]"
set -g window-status-separator ""

# VI
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection
set -g escape-time 0
set -g mode-keys vi
set -g status-keys vi
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

# WINDOWS
bind -n M-n new-window -c "#{pane_current_path}"
bind -n M-i select-window -t :-
bind -n M-o select-window -t :+
bind M-f resize-pane -Z
